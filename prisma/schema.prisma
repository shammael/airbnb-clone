// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  email          String?       @unique
  name           String?
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  favoritesId    String[]      @db.ObjectId
  account        Account[]
  Listing        Listing[]
  Reservation    Reservation[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountID String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String  @db.ObjectId

  @@unique([provider, providerAccountID])
}

model Listing {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  description    String
  imageSrc       String
  createdAt      DateTime @default(now())
  category       String
  roomCount      Int
  bathoRoomCount Int
  guestCount     Int
  locationValue  String
  price          Int

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  reservations Reservation[]
}

model Reservation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  Listing   Listing? @relation(fields: [listingId], references: [id])
  listingId String?  @db.ObjectId
  userId    String   @db.ObjectId
  User      User     @relation(fields: [userId], references: [id])
}
